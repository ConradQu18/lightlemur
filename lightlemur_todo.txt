The Great Todo List

*** python port *** (in progress)

*** unit tests *** 

*** memory leak tests ***

*** contiguous optimizations ***

*** u ops ***
    - neg
    - exp 
    - log
    - relu (done)
    - sqrt
    - abs
    - sign 
    - reciprocal
    - sigmoid

*** b ops ***
    - add (done)
    - mul (done)
    - sub
    - div
    - pow
    - eq
    - neq
    - lt
    - gt
    - minimum 
    - maximum

*** r ops ***
    - sum (backward done, forward in progress)
    - max
    - mean (note: could be done with sum + division)
    - argmax
    - argmin

*** s ops ***
    - view
    - contiguous
    - reshape 
    - transpose
    - expand
    - slice
    - flip
    - concat
    - split
    - permute

*** cuda ***

*** matmul op ***
    - gpu kernel
    - metal kernel


*** optimizers ***
*** models ***
*** conv (matmul + im2col) ***
*** lazy execution (.compile()) ***
*** kernel fusion/compiler (.compute()) ***

*** other ***
update docs, specific function checks should be done in the interface
stubs for interface
checks for forward_kernel etc
improve print (add limits)
using contiguous to improve binary performance
make file clean frontend/__pycache__?


NOTE
check if a new tensor has to allocate new memory per function called (i.e. immutable)
answer: yes because when compiler fusion is done, this wont matter